
function p(a) {
  var b = {}, c;
  for (c in a) {
    b[c] = a[c];
  }
  return b;
}
function u(a) {
  return " var y" + (a + ("=state.y,x" + (a + "=state.x;")));
}
function v(a) {
  return "state.y=y" + (a + (";state.x=x" + (a + ";")));
}
function w(a, b, c) {
  if (a.expression) {
    b = !!c.capture && !a.capture;
    var d = c.length && c.abort && "node.length=ln" + (c.length + ";") || "";
    a = " if((x = " + (a.expression.id + "(state)) " + (b ? "!=" : "==") + " null)" + ((b ? "{node.push(x);}else " : "") + ("{" + (v(c.index) + (d + (c.abort + "}"))))));
  } else {
    d = !!c.capture && !a.capture, c = p(c), c.capture = d, !c.length && d ? (c.length = b, a = "var ln" + (b + "=node.length;") + (x(a.sequence, b + 1, c) + "")) : a = x(a.sequence, b + 1, c);
  }
  return a;
}
function y(a, b, c) {
  var d = c.index, f = c.abort, m = "inv_" + b, g = "loop_" + b;
  c = p(c);
  "!" === a.capture && (c.index = b, c.abort = "break " + (m + ""));
  "+" === a.quantifier ? (g = p(a), g.quantifier = "*", c = w(a, b, c) + (y(g, b, c) + "")) : "*" === a.quantifier ? (c.length = 0, c.index = b, c.abort = "break " + (g + ";"), c = g + (":for(;;){" + (u(b) + (w(a, b, c) + "}")))) : "?" === a.quantifier ? (c.index = b, c.abort = "", c = u(b) + (w(a, b, c) + "")) : c = w(a, b, c);
  return "!" === a.capture ? m + (":{" + (u(b) + (c + (v(d) + (f + "}"))))) : "=" === a.capture ? u(b) + (c + (v(b) + "")) : c;
}
function x(a, b, c) {
  for (var d = a.alternation ? "alt_" + b : "", f = ""; a; a = a.alternation) {
    var m = "block_" + b, g = c;
    a.alternation && (g = p(c), g.index = b, g.abort = "break " + (m + ";"));
    for (var l = "", q = 0; q < a.length; q++) {
      l += y(a[q], b, g);
    }
    f = a.alternation ? f + (m + (":{" + (u(b) + (l + (" break " + (d + ";}")))))) : f + l;
  }
  return d ? d + (":{" + (f + "}")) : f;
}
function z(a, b, c) {
  return "(function(state){" + (u(1) + (" var node=[];var x;" + (x(a, 2, {index:1, length:0, abort:"return;", capture:!0}) + ("node.tag=" + (b + (";return " + ((c ? "(" + (c + ")(node)") : "node") + ";})")))))));
}
function A(a) {
  throw new SyntaxError('Unexpected token "' + a + '"');
}
var B = "boolean" === typeof/./g.sticky;
function C(a) {
  return a.length ? a : function(b) {
    return a()(b);
  };
}
function D(a) {
  return function(b) {
    if (b.x < b.quasis.length) {
      for (var c = b.quasis[b.x], d = 0, f = a.length; d < f; d++) {
        if (c.charCodeAt(b.y + d) !== a.charCodeAt(d)) {
          return null;
        }
      }
      b.y += a.length;
      return a;
    }
  };
}
function E(a) {
  a = B ? new RegExp(a.source, "y") : new RegExp(a.source + "|()", "g");
  return function(b) {
    if (b.x < b.quasis.length) {
      var c = b.quasis[b.x];
      a.lastIndex = b.y;
      var d;
      B ? a.test(c) && (d = c.slice(b.y, a.lastIndex)) : (c = a.exec(c), null == c[1] && (d = c[0]));
      b.y = a.lastIndex;
      return d;
    }
  };
}
function F(a) {
  return "function" === typeof a ? C(a) : "string" === typeof a ? D(a) : E(a);
}
function G(a, b) {
  return {id:"_" + b};
}
function H(a, b) {
  return "_" + b;
}

function interpolation(a) {
  return function(b) {
    if (b.x < b.expressions.length && b.y >= b.quasis[b.x].length) {
      b.y = 0;
      var c = b.expressions[b.x++];
      a && c && (c = a(c));
    }
    return c;
  };
};
function match(a, b) {
  return function(c) {
    for (var d = [], f = arguments.length - 1; 0 < f--;) {
      d[f] = arguments[f + 1];
    }
    f = d.map(G);
    for (var m = [], g = [], l = null, q, h = g, k, n, r = 0; r < c.length + f.length; r++) {
      0 !== r % 2 && (n = f[r++ >> 1], h.push({expression:n, capture:k}), k = void 0);
      var t = c[r >> 1];
      for (n = 0; n < t.length;) {
        var e = t[n++];
        " " !== e && "\t" !== e && "\r" !== e && "\n" !== e && ("|" === e && h.length ? h = h.alternation = [] : ")" === e && h.length ? (l = null, (h = m.pop()) || A(e)) : "(" === e ? (m.push(h), h.push(l = {sequence:[], capture:k}), h = l.sequence, k = void 0) : ":" === e || "=" === e || "!" === e ? (k = e, t[n] && "(" !== t[n] && A(e)) : "?" === e && !h.length && l ? (k = t[n++], ":" === k || "=" === k || "!" === k ? (l.capture = k, k = void 0) : A(e)) : "?" !== e && "+" !== e && "*" !== e || 
        !(q = h[h.length - 1]) ? A(e) : q.quantifier = e);
      }
    }
    return (new Function("_n,_t," + d.map(H).join(","), "return " + z(g, "_n", b ? "_t" : null))).apply(void 0, [a, b].concat(d.map(F)));
  };
};
function parse$1(a) {
  return function(b) {
    for (var c = [], d = arguments.length - 1; 0 < d--;) {
      c[d] = arguments[d + 1];
    }
    "string" === typeof b && (b = [b]);
    return a({quasis:b, expressions:c, x:0, y:0});
  };
};export{F as __pattern,interpolation,match,parse$1 as parse}
//# sourceMappingURL=reghex-core.mjs.map
